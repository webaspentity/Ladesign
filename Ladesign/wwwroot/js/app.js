"use strict"; let dotnetHeader, bodyDisabled = !1; window.getEditableContent = e => e.textContent, window.preventScroll = e => (e.preventDefault(), e.stopPropagation(), !1), window.disableBody = () => { document.body.addEventListener("wheel", preventScroll, { passive: !1 }), bodyDisabled = !0 }, window.enableBody = () => { document.body.removeEventListener("wheel", preventScroll, { passive: !1 }), bodyDisabled = !1 }, window.openModal = e => { e.showModal(), disableBody() }, window.closeModal = e => { e.close(), enableBody() }, window.runOnScroll = () => { if ("/" === window.location.pathname) { const e = document.getElementById("header"); !e.classList.contains("fixed") && pageYOffset >= e.clientHeight ? e.classList.add("fixed") : pageYOffset < e.clientHeight && e.classList.contains("fixed") && e.classList.remove("fixed") } }, window.debounce = (e, o, n) => { let d; return function () { const t = this, i = arguments, s = n && !d; clearTimeout(d), d = setTimeout((() => { d = null, n || e.apply(t, i) }), o), s && e.apply(t, i) } }, window.setHeaderNoFixed = () => { const e = document.getElementById("header"); e.classList.contains("fixed") && e.classList.remove("fixed") }, window.setHeaderFixed = () => { const e = document.getElementById("header"); e.classList.contains("fixed") || e.classList.add("fixed") }, window.toggleBodyOverflow = () => { "hidden" === document.body.style.overflowY ? document.body.style.overflowY = "auto" : document.body.style.overflowY = "hidden" }, window.addEventListener("scroll", runOnScroll), window.toggleMenu = () => { dotnetHeader.invokeMethodAsync("ToggleMenu"), dotnetHeader.invokeMethodAsync("Refresh") }, window.runOnResize = () => { if (document.body.clientWidth > 768 && bodyDisabled) { document.getElementById("menu").classList.contains("open") && (enableBody(), console.log("Menu opened..."), toggleMenu()) } }, window.addEventListener("resize", debounce(runOnResize, 100)), window.setHeader = e => { dotnetHeader = e };
